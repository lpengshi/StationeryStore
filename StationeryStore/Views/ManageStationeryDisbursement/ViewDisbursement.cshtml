@*JANEL*@

@using StationeryStore.Models
@using StationeryStore.Util

@model List<StationeryStore.Models.StationeryDisbursementDetailsEF>
@{
    StationeryDisbursementEF disbursement = (StationeryDisbursementEF)ViewData["disbursement"];
    List<StaffEF> deptStaff = (List<StaffEF>)ViewData["deptStaff"];
    StaffEF storeClerk = (StaffEF)ViewData["storeClerk"];
}
<div>@Html.Partial("_Store")</div>

<div class="mainview">
    <h3>View Stationery Disbursement</h3>
    <br />

    @using (Html.BeginForm("SaveDisbursement", "ManageStationeryDisbursement", FormMethod.Post))
    {


        <div class="listview">
            <table align="center">
                <tr>
                    <td class="details">Retrieval Id</td>
                    <td>@disbursement.RetrievalId</td>
                </tr>
                <tr>
                    <td class="details">Disbursement Id</td>
                    <td>@disbursement.DisbursementId</td>
                </tr>
                <tr>
                    <td class="details">Disbursement Date</td>
                    <td>@Timestamp.dateFromTimestamp((long)disbursement.DateDisbursed)</td>
                </tr>
                <tr>
                    <td class="details">Department</td>
                    <td>@disbursement.Department.DepartmentName</td>
                </tr>
                <tr>
                    <td class="details">Store Clerk</td>
                    <td>@storeClerk.Name<input type="hidden" name="storeClerkId" value="@storeClerk.StaffId" /></td>
                </tr>
                @if (disbursement.Status == "Retrieved")
                {
                    <tr>
                        <td class="details">Department Representative</td>
                        <td>
                            <select name="collectionRepId">
                                @foreach (StaffEF staff in deptStaff)
                                {
                                    if (staff.StaffId == disbursement.CollectionRepId)
                                    {
                                        <option value="@staff.StaffId" selected>@staff.Name</option>
                                    }
                                    else
                                    {
                                        <option value="@staff.StaffId">@staff.Name</option>
                                    }

                                }
                            </select>
                        </td>
                    </tr>
                }
                else
                {
                    <tr>
                        <td class="details">Collected By</td>
                        <td>@disbursement.Staff.Name</td>
                    </tr>
                }
                <tr>
                    <td class="details">Status</td>
                    <td>@disbursement.Status</td>
                </tr>
            </table>
            <br />
            <table class="listview">
                <tr class="listview">
                    <td class="listviewuom">Item Code</td>
                    <td class="listviewheader">Item Description</td>
                    <td class="listviewheader">Total Retrieved Quantity</td>
                    <td class="listviewheader">Total Disbursed Quantity</td>
                </tr>
                @for (var i = 0; i < Model.Count; i++)
                {
                    <tr class="listview">
                        <td class="oddlistview">@Html.DisplayFor(x => x[i].ItemCode)</td>
                        <td class="oddlistview">@Model[i].Stock.Description</td>
                        <td class="oddlistview">@Html.DisplayFor(x => x[i].RetrievedQuantity)</td>
                        @if (disbursement.Status == "Retrieved")
                        {
                            <td class="oddlistview">
                                @Html.EditorFor(x => x[i].DisbursedQuantity, new { htmlAttributes = new { min = 0, max = Model[i].RetrievedQuantity } })
                                @Html.ValidationMessageFor(x => x[i].DisbursedQuantity)
                            </td>
                        }
                        else
                        {
                            <td class="oddlistview">@Html.DisplayFor(x => x[i].DisbursedQuantity)</td>
                        }
                        <td>@Html.HiddenFor(x => x[i].DisbursementDetailsId)</td>
                        <td>@Html.HiddenFor(x => x[i].DisbursementId)</td>
                        <td>@Html.HiddenFor(x => x[i].ItemCode)</td>
                        <td>@Html.HiddenFor(x => x[i].RequestQuantity)</td>
                        <td>@Html.HiddenFor(x => x[i].RetrievedQuantity)</td>
                        <td><input type="hidden" name="disbursementId" value="@disbursement.DisbursementId" /></td>
                    </tr>
                }
                @if (disbursement.Status == "Retrieved")
                {
                    <tr class="decision">
                        <td class="decision" colspan="6" align="right">
                            <input type="submit" class="decision" name="decision" value="Cancel" />
                            <input type="submit" class="decision" name="decision" value="Save" onclick="return confirm('Confirm disbursed quantities?')" />
                        </td>
                    </tr>
                }
                else
                {
                    <tr class="decision">
                        <td class="decision" colspan="6" align="right">
                            <input type="button" class="decision" value="Back" onclick="location.href='@Url.Action("ViewDisbursementHistory", "ManageStationeryDisbursement", new { page = 1 })'" />
                        </td>
                    </tr>
                }

            </table>
        </div>
    }
    <br /><br />
</div>

<style>
    .field-validation-error {
        color: #ff0000;
    }
</style>
