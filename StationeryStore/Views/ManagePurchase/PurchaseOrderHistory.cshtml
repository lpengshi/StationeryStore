@using StationeryStore.Models
@using StationeryStore.Util
@{
    List<PurchaseOrderEF> poList = (List<PurchaseOrderEF>)ViewData["purchaseOrders"];
    int page = (int)ViewData["page"];
    int noOfPages = (int)ViewData["noOfPages"];
    string search = (string)ViewData["search"];
}

<div>@Html.Partial("_Store")</div>


<div class="mainview">
    <h3>View Purchase Orders</h3>
    <br />
    <div class="detailstext">
        @{string currentDate = DateTime.Now.ToShortDateString();
            <form action="~/ManagePurchase/PurchaseOrderHistory" method="post">
                <input type="hidden" name="page" value="1" />
                <table class="listview">
                    <tr>
                        <td colspan="2"><p>From: <input type="date" name="startDate" />   To: <input type="date" name="endDate" /></p></td>
                    </tr>
                    <tr>
                        @if (search != null)
                        {
                            <td><input size="40" type="text" name="search" value="@search" placeholder="Search by P.O id, status, description..." /></td>
                        }
                        else
                        {
                            <td><input size="40" type="text" name="search" placeholder="Search by P.O id, status, description..." /></td>
                        }
                        <td><input type="submit" value="Search" class="decision" /></td>
                    </tr>
                </table>
            </form>
        }
    </div>
    <br />
    <div>
        <table class="listview">
            <tr class="listview">
                <th class="listviewuom">OrderId</th>
                <th class="listviewdate">Date Created</th>
                <th class="listviewuom">Supplier</th>
                <th class="listviewuom">No. Items</th>
                <th class="listviewdescription">Description</th>
                <th class="listviewuom">Status</th>
            </tr>
            @{if (poList != null && poList.Count != 0)
                {
                    foreach (var po in poList)
                    {
                        var itemCount = po.PurchaseOrderDetails.Count;
                        string createdDate = Timestamp.dateFromTimestamp(po.OrderDate);

                        <tr class="listview">
                            <td class="oddlistview">@Html.ActionLink(po.OrderId.ToString(), "ViewPurchaseOrder", new { purchaseOrderId = po.OrderId.ToString() })</td>
                            <td class="oddlistview">@createdDate</td>
                            <td class="oddlistview">@po.SupplierCode</td>
                            <td class="oddlistview">@itemCount</td>
                            <td class="oddlistview">@po.Description</td>
                            <td class="oddlistview">@po.Status</td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="6">No purchase order history to display.</td>
                    </tr>
                }
            }
        </table>
    </div>
    @if (noOfPages > 1)
    {
        <br />
        <div class="pagination">
            @{
                <span>@Html.ActionLink("«", "PurchaseOrderHistory", "ManagePurchase", new { page = 1 }, null)</span>

                for (int i = 1; i <= noOfPages; i++)
                {
                    string num = i.ToString();
                    <span>@Html.ActionLink(num, "PurchaseOrderHistory", "ManagePurchase", new { page = i }, null)</span>
                }

                <span>@Html.ActionLink("»", "PurchaseOrderHistory", "ManagePurchase", new { page = noOfPages }, null)</span>
            }
            <p>Page: @page </p>
        </div>
    }
</div>