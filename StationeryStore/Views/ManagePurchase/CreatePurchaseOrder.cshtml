@model StationeryStore.Models.PurchaseOrderFormDTO
@using StationeryStore.Models
@using StationeryStore.Util
@{
    string supplier = (string)ViewData["supplier"];
    List<SupplierEF> supplierList = (List<SupplierEF>)ViewData["supplierList"];
    List<SupplierDetailsEF> supplierItemList = (List<SupplierDetailsEF>)ViewData["supplierItems"];
    List<SupplierDetailsEF> selectedItems = (List<SupplierDetailsEF>)ViewData["selectedItems"];

    //List<Stock> addedItems = (List<Stock>)ViewData["addedItemList"];
    string currentDate = DateTime.Now.ToShortDateString();


}

<div>@Html.Partial("_Store")</div>

<div class="mainview">
    <div>
        <h3 class="title">Create Purchase Order</h3>
        <br />
        <br />
        @using (Html.BeginForm("CreatePurchaseOrder", "ManagePurchase", FormMethod.Post))
        {
            <div align="left">
                <div align ="left">
                    <table class="listview">
                        <tr>
                            <td class="listrequestlabel">Date:</td>
                            <td class="listrequestvalue">@currentDate</td>
                            <td></td>
                        </tr>
                        <tr>
                            <td class="listrequestlabel">Supplier: </td>
                            <td class="formviewoption">
                                <select name="supplier">
                                    @{ foreach (SupplierEF s in supplierList)
                                        {
                                            if (s.SupplierCode == supplier)
                                            {
                                                <option value="@s.SupplierCode" selected="selected">@s.SupplierCode</option>
                                            }
                                            else
                                            {
                                                <option value="@s.SupplierCode">@s.SupplierCode</option>
                                            }
                                        }
                                    }
                                </select>                              
                            </td>
                            <td class="formviewbutton"><button onclick="submit()" class="decision" name="choice" value="setSupplier">Set Supplier</button></td>
                        </tr>
                        <tr>
                            <td class="listrequestlabel">Deliver to: </td>
                            <td>
                                @Html.EditorFor(m => m.DeliveryAdd)                               
                            </td>
                            <td class="formviewvalidation">@Html.ValidationMessageFor(m => m.DeliveryAdd)</td>
                        </tr>
                        <tr>
                            <td class="listrequestlabel">Supply items by:</td>
                            <td>
                                @Html.EditorFor(m => m.SupplyItemBy)                               
                            </td>
                            <td class="formviewvalidation">@Html.ValidationMessageFor(m => m.SupplyItemBy)</td>
                        </tr>
                        <tr>
                            <td class="listrequestlabel">Description: </td>
                            <td>
                                @Html.EditorFor(m => m.Description)
                            </td>
                        </tr>
                        <tr>
                            <td class="listrequestlabel">Select Items to order:</td>
                            <td class="formviewoption">
                                <select id="items" name="items">
                                    @{ if (supplierItemList != null)
                                        {
                                            foreach (SupplierDetailsEF sd in supplierItemList)
                                            {
                                                string opStr = sd.Stock.ItemCode + "(Rank: " + sd.SupplierRank + ")- " + sd.Stock.Description;
                                                <option value="@sd.SupplierDetailsId">@opStr</option>
                                            }
                                        }
                                    }
                                </select>                               
                            </td>
                            <td class="formviewbutton"><input class="decision" type="submit" onclick="submit()" value="Add Item" name="choice" /></td>
                        </tr>
                    </table>
                </div>
                <br />
                <br />
                <div>
                    <table class="listview">
                        <tr>
                            <td class="listviewtitle" colspan="7">Items selected</td>
                        </tr>
                        <tr>
                            <th class="listviewuom">Item SN</th>
                            <th class="listviewuom">Id</th>
                            <th class="listviewdescription">Description</th>
                            <th class="listviewuom">UOM</th>
                            <th class="listviewuom">Price/unit</th>
                            <th class="listviewuom">Quantity</th>
                            <th class="listviewremove">Remove</th>
                        </tr>
                        @{if (Model != null && Model.SupplierDetailIds != null)
                            {
                                for (int i = 0; i < @Model.SupplierDetailIds.Count; i++)
                                {
                                    int itemSN = i + 1;
                                    <tr>
                                        <td class="oddlistview">@itemSN</td>
                                        <td class="oddlistview">@Model.Icodes[i]</td>
                                        <td class="oddlistview">@Model.Descs[i]</td>
                                        <td class="oddlistview">@Model.Uoms[i]</td>
                                        <td class="oddlistview">@string.Format("{0:C}", Model.Prices[i])</td>
                                        <td class="oddlistview">
                                            @Html.EditorFor(m => m.Quantities[i], new { htmlAttributes = new { min = 1, max = 99999 } })
                                            <br />@Html.ValidationMessageFor(m => m.Quantities[i])
                                        </td>
                                        <td class="oddlistview">@Html.CheckBoxFor(m => m.Remove[i])</td>
                                    </tr>

                                    @Html.HiddenFor(m => m.SupplierDetailIds[i], Model.SupplierDetailIds[i])
                                    @Html.HiddenFor(m => m.Quantities[i], Model.Quantities[i])
                                    @Html.HiddenFor(m => m.Icodes[i], Model.Icodes[i])
                                    @Html.HiddenFor(m => m.Descs[i], Model.Descs[i])
                                    @Html.HiddenFor(m => m.Uoms[i], Model.Uoms[i])
                                    @Html.HiddenFor(m => m.Prices[i], Model.Prices[i])
                                    @Html.HiddenFor(m => m.Remove[i], Model.Remove[i])


                                }
                            }
                        }
                        <tr>
                            <td colspan="7" align="right" height="100px">
                                <button onclick="warning()" name="choice" value="CreatePO" class="decision">Submit</button>
                                <button onclick="submit()" name="choice" value="Remove" class="decision">Remove Selected Items</button>
                                <button onclick="location.href='@Url.Action("PurchaseOrderHistory", "ManagePurchase", new { page=1})'" name="choice" value="Cancel" class="decision">Cancel</button>
                            </td>
                        </tr>
                    </table>
                </div>
            </div>
        }
    </div>
</div>
<script>
    function warning() {
        confirm("Create the purchase order?")
    }
</script>
<style>
    .field-validation-error {
        color: #ff0000
    }
</style>

